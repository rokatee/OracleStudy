SELECT USER
FROM DUAL;
--==>> NO1
--------------------------------------------------------------------------------
------TBL_ADMIN 구성-------------------------------------------------------------

-- 테이블 구성       
CREATE TABLE TBL_ADMIN
( ADMIN_ID	    VARCHAR2(10)	                NOT NULL
, ADMIN_PW	    VARCHAR2(15)	                NOT NULL
, ADMIN_NAME	VARCHAR2(30)	                NULL
, ADMIN_DATE	DATE	        DEFAULT SYSDATE NOT NULL
, CONSTRAINT PK_TBL_ADMIN PRIMARY KEY (ADMIN_ID)
);

--------------------------------------------------------------------------------
------TBL_PROFESSOR 구성-----------------------------------------------------------

-- 테이블 구성   
CREATE TABLE TBL_PROFESSOR
( PRO_ID	VARCHAR2(10)	NOT NULL
, PRO_NAME	VARCHAR2(30)	NOT NULL
, PRO_PW	VARCHAR2(15)	NOT NULL
, PRO_SSN	VARCHAR(14)	    NOT NULL
, PRO_EMAIL	VARCHAR2(30)	NULL
, PRO_PHONE	VARCHAR2(20)	NULL
, PRO_DATE	DATE	        NOT NULL
, CONSTRAINT PK_TBL_PROFESSOR PRIMARY KEY (PRO_ID)
);

--------------------------------------------------------------------------------
------TBL_CLASS 구성-----------------------------------------------------------

CREATE TABLE TBL_CLASS
( CLASS_ID	    VARCHAR2(10)	NOT NULL
, CLASS_NAME	VARCHAR2(30)	NOT NULL
, CONSTRAINT PK_TBL_CLASS PRIMARY KEY (CLASS_ID)
);

--------------------------------------------------------------------------------
------TBL_ABLE 구성-----------------------------------------------------------

CREATE TABLE TBL_ABLE
( ABLE_ID	VARCHAR2(10)	NOT NULL
, CLASS_ID	VARCHAR2(10)	NOT NULL
, PRO_ID	VARCHAR2(10)	NOT NULL
, CONSTRAINT PK_TBL_ABLE PRIMARY KEY (ABLE_ID)
);

ALTER TABLE TBL_ABLE
ADD CONSTRAINT FK_TBL_CLASS_TO_TBL_ABLE_1 FOREIGN KEY (CLASS_ID)
REFERENCES TBL_CLASS (CLASS_ID);

ALTER TABLE TBL_ABLE 
ADD CONSTRAINT FK_TBL_PROFESSOR_TO_TBL_ABLE_1 FOREIGN KEY (PRO_ID)
REFERENCES TBL_PROFESSOR (PRO_ID);

--------------------------------------------------------------------------------
------TBL_COURSE 구성-----------------------------------------------------------

-- 테이블 구성       
CREATE TABLE TBL_COURSE
( COURSE_ID	    VARCHAR2(10)	NOT NULL
, COURSE_NAME	VARCHAR2(50)	NOT NULL
, CONSTRAINT PK_TBL_COURSE PRIMARY KEY (COURSE_ID)
);

--------------------------------------------------------------------------------
------TBL_CLASSROOM 구성--------------------------------------------------------

-- 테이블 구성       
CREATE TABLE TBL_CLASSROOM
( ROOM_ID	    VARCHAR2(10)	NOT NULL
, ROOM_NAME	    VARCHAR2(10)	NOT NULL
, ROOM_INWON	NUMBER(3)	    NOT NULL
, CONSTRAINT PK_TBL_CLASSROOM PRIMARY KEY (ROOM_ID)
);

--------------------------------------------------------------------------------
------TBL_OCOURSE 구성----------------------------------------------------------

-- 테이블 구성       
CREATE TABLE TBL_OCOURSE 
( OCOURSE_ID	VARCHAR2(10)	NOT NULL
, START_DATE	DATE	        NOT NULL
, END_DATE	    DATE	        NOT NULL
, INSERT_DATE	DATE	        NOT NULL
, COURSE_ID	    VARCHAR2(10)	NOT NULL
, ROOM_ID	    VARCHAR2(10)	NOT NULL
, CONSTRAINT PK_TBL_OCOURSE PRIMARY KEY (OCOURSE_ID)
);

-- 제약 조건 추가
ALTER TABLE TBL_OCOURSE
ADD CONSTRAINT FK_TBL_COURSE_TO_TBL_OCOURSE_1 FOREIGN KEY (COURSE_ID)
                    REFERENCES TBL_COURSE (COURSE_ID);

ALTER TABLE TBL_OCOURSE
ADD CONSTRAINT FK_TBL_CLASSROOM_TO_TBL_OCOURSE_1 FOREIGN KEY (ROOM_ID)
                    REFERENCES TBL_CLASSROOM (ROOM_ID);

--------------------------------------------------------------------------------
------TBL_TEXTBOOK 구성---------------------------------------------------------

-- 테이블 구성
CREATE TABLE TBL_TEXTBOOK
( BOOK_ID       VARCHAR2(10)                                            -- 교재 코드 (PK)
, BOOK_NAME     VARCHAR2(20)    CONSTRAINT TEXTBOOK_NAME_NN NOT NULL    -- 교재명
, BOOK_PUB      VARCHAR2(20)                                            -- 출판사
, CONSTRAINT TEXTBOOK_BOOK_ID_PK PRIMARY KEY(BOOK_ID)
);

--------------------------------------------------------------------------------
------TBL_OCLASS 구성-----------------------------------------------------------

-- 테이블 구성
CREATE TABLE TBL_OCLASS
( OCLASS_ID     VARCHAR2(10)                                                -- 개설과목 코드 (PK)
, START_DATE    DATE            CONSTRAINT OCLASS_START_DATE_NN NOT NULL    -- 과목 시작일
, END_DATE      DATE            CONSTRAINT OCLASS_END_DATE_NN NOT NULL      -- 과목 종료일        
, INSERT_DATE   DATE            CONSTRAINT OCLASS_INSERT_DATE_NN NOT NULL   -- 개설일자
, ABLE_ID       VARCHAR2(10)                                                -- 강의 가능 여부 코드 (FK : TBL_ABLE)
, OCOURSE_ID    VARCHAR2(10)    CONSTRAINT OCLASS_OCOURSE_ID_NN NOT NULL    -- 개설과정 코드 (FK : TBL_OCOURSE)
, BOOK_ID       VARCHAR2(10)                                                -- 교재 코드 (FK : TBL_TEXTBOOK)
, CONSTRAINT OCLASS_OCLASS_ID_PK PRIMARY KEY(OCLASS_ID)
);

-- 제약 조건 추가
ALTER TABLE TBL_OCLASS
ADD CONSTRAINT OCLASS_ABLE_ID_FK FOREIGN KEY(ABLE_ID)
                    REFERENCES TBL_ABLE(ABLE_ID);

ALTER TABLE TBL_OCLASS
ADD CONSTRAINT OCLASS_OCOURSE_ID_FK FOREIGN KEY(OCOURSE_ID)
                    REFERENCES TBL_OCOURSE(OCOURSE_ID);

ALTER TABLE TBL_OCLASS
ADD CONSTRAINT OCLASS_BOOK_ID_FK FOREIGN KEY(BOOK_ID)
                    REFERENCES TBL_TEXTBOOK(BOOK_ID);

--------------------------------------------------------------------------------
------TBL_STUDENT 구성----------------------------------------------------------

-- 테이블 구성       
CREATE TABLE TBL_STUDENT
( STU_ID	VARCHAR2(10)	NOT NULL
, STU_NAME	VARCHAR2(30)	NOT NULL
, STU_PW	VARCHAR2(15)	NOT NULL
, STU_SSN	VARCHAR(14)	    NOT NULL
, STU_EMAIL	VARCHAR2(30)	NULL
, STU_PHONE	VARCHAR2(20)	NULL
, STU_DATE	DATE	        NOT NULL
, CONSTRAINT PK_TBL_STUDENT PRIMARY KEY (STU_ID)
);

--------------------------------------------------------------------------------
------TBL_REASON 구성-----------------------------------------------------------

-- 테이블 구성       
CREATE TABLE TBL_REASON
( REASONS_ID	VARCHAR2(10)	NOT NULL
, REASON_MEMO	VARCHAR2(50)	NOT NULL
, CONSTRAINT PK_TBL_REASON PRIMARY KEY (REASONS_ID)
);

--------------------------------------------------------------------------------
------TBL_SIGN 구성-------------------------------------------------------------

-- 테이블 구성       
CREATE TABLE TBL_SIGN 
( SIGN_ID	    VARCHAR2(10)	                NOT NULL
, SIGN_DATE	    DATE	        DEFAULT SYSDATE NOT NULL
, STU_ID	    VARCHAR2(10)	                NOT NULL
, OCOURSE_ID	VARCHAR2(10)	                NOT NULL
, CONSTRAINT PK_TBL_SIGN PRIMARY KEY (SIGN_ID)
);

-- 제약 조건 추가
ALTER TABLE TBL_SIGN
ADD CONSTRAINT FK_TBL_STUDENT_TO_TBL_SIGN_1 FOREIGN KEY (STU_ID)
                    REFERENCES TBL_STUDENT (STU_ID);

ALTER TABLE TBL_SIGN
ADD CONSTRAINT FK_TBL_OCOURSE_TO_TBL_SIGN_1 FOREIGN KEY (OCOURSE_ID)
                    REFERENCES TBL_OCOURSE (OCOURSE_ID);

--------------------------------------------------------------------------------
------TBL_FAIL 구성-------------------------------------------------------------

-- 테이블 구성
CREATE TABLE TBL_FAIL
(FAIL_ID	    VARCHAR2(10)	                NOT NULL
, FAIL_DATE	    DATE	        DEFAULT SYSDATE NOT NULL	
, SIGN_ID	    VARCHAR2(10)	                NOT NULL
, REASONS_ID	VARCHAR2(10)	                NOT NULL
, CONSTRAINT PK_TBL_FAIL PRIMARY KEY (FAIL_ID)
);

-- 제약 조건 추가
ALTER TABLE TBL_FAIL
ADD CONSTRAINT FK_TBL_SIGN_TO_TBL_FAIL_1 FOREIGN KEY (SIGN_ID)
                    REFERENCES TBL_SIGN(SIGN_ID);

ALTER TABLE TBL_FAIL 
ADD CONSTRAINT FK_TBL_REASON_TO_TBL_FAIL_1 FOREIGN KEY (REASONS_ID)
                    REFERENCES TBL_REASON(REASONS_ID);

--------------------------------------------------------------------------------
------TBL_POINT 구성------------------------------------------------------------

-- 테이블 구성 -- 시퀀스로 출/필/실기 배점 범위 정해주기
CREATE TABLE TBL_POINT
( POINT_ID          VARCHAR2(10)                                                     -- 배점코드 (PK)
, POINT_ATTEND      NUMBER(3)       DEFAULT 0 CONSTRAINT POINT_ATTEND_NN NOT NULL    -- 출결 배점 
, POINT_PRACTICE    NUMBER(3)       DEFAULT 0                                        -- 실기 배점
, POINT_WRITE       NUMBER(3)       DEFAULT 0                                        -- 필기 배점
, OCLASS_ID         VARCHAR2(10)              CONSTRAINT POINT_OCLASS_ID NOT NULL    -- 개설과목 코드 (FK : TBL_OCLASS)
, CONSTRAINT POINT_POINT_ID_PK PRIMARY KEY(POINT_ID)
);

-- 제약 조건 추가
ALTER TABLE TBL_POINT
ADD CONSTRAINT POINT_OCLASS_ID_FK FOREIGN KEY(OCLASS_ID)
                    REFERENCES TBL_OCLASS(OCLASS_ID);
                    
--------------------------------------------------------------------------------
------TBL_GRADE 구성----------------------------------------------------------

-- 테이블 구성       
CREATE TABLE TBL_GRADE
( GRADE_ID	        VARCHAR2(10)	NOT NULL
, GRADE_ATTEND	    NUMBER(3)	    NULL
, GRADE_PRACTICE	NUMBER(3)	    NULL
, GRADE_WRITE	    NUMBER(3)	    NULL
, OCLASS_ID	        VARCHAR2(10)	NOT NULL
, SIGN_ID	        VARCHAR2(10)	NOT NULL
, CONSTRAINT PK_TBL_GRADE PRIMARY KEY (GRADE_ID)
);

-- 제약 조건 추가
ALTER TABLE TBL_GRADE
ADD CONSTRAINT FK_TBL_OCLASS_TO_TBL_GRADE_1 FOREIGN KEY (OCLASS_ID)
REFERENCES TBL_OCLASS (OCLASS_ID);

ALTER TABLE TBL_GRADE 
ADD CONSTRAINT FK_TBL_SIGN_TO_TBL_GRADE_1 FOREIGN KEY (SIGN_ID)
REFERENCES TBL_SIGN (SIGN_ID);



--------------------------------------------------------------------------------
--==============================================================================
--TBL_ADMIN 
COMMENT ON TABLE TBL_ADMIN IS '관리자 테이블';
COMMENT ON COLUMN TBL_ADMIN.ADMIN_ID IS '관리자 아이디';
COMMENT ON COLUMN TBL_ADMIN.ADMIN_PW IS '관리자 비밀번호';
COMMENT ON COLUMN TBL_ADMIN.ADMIN_NAME IS '관리자명';
COMMENT ON COLUMN TBL_ADMIN.ADMIN_DATE IS '관리자 등록일';

--TBL_PROFESSOR
COMMENT ON TABLE TBL_PROFESSOR IS '교수 테이블';
COMMENT ON COLUMN TBL_PROFESSOR.PRO_ID IS'교수 아이디';
COMMENT ON COLUMN TBL_PROFESSOR.PRO_NAME IS'교수명';
COMMENT ON COLUMN TBL_PROFESSOR.PRO_PW IS'비밀번호';
COMMENT ON COLUMN TBL_PROFESSOR.PRO_SSN IS'주민등록번호';
COMMENT ON COLUMN TBL_PROFESSOR.PRO_EMAIL IS'교수 이메일';
COMMENT ON COLUMN TBL_PROFESSOR.PRO_PHONE IS'교수 폰번호';
COMMENT ON COLUMN TBL_PROFESSOR.PRO_DATE IS'교수 가입날짜';

--TBL_CLASS
COMMENT ON TABLE TBL_CLASS IS '과목 테이블';
COMMENT ON COLUMN TBL_CLASS.CLASS_ID IS '과목코드';
COMMENT ON COLUMN TBL_CLASS.CLASS_NAME IS '과목명';

--TBL_ABLE
COMMENT ON TABLE TBL_ABLE IS '강의 가능 여부 테이블';
COMMENT ON COLUMN TBL_ABLE.ABLE_ID IS 'DD';
COMMENT ON COLUMN TBL_ABLE.CLASS_ID IS '과목코드';
COMMENT ON COLUMN TBL_ABLE.PRO_ID IS '교수 아이디';

-- TBL_COURSE (과정) 테이블, 컬럼 코멘트 입력
COMMENT ON TABLE TBL_COURSE IS '과정';
COMMENT ON COLUMN TBL_COURSE.COURSE_ID IS '과정코드';
COMMENT ON COLUMN TBL_COURSE.COURSE_NAME IS '과정명';

-- TBL_CLASSROOM (강의실) 테이블, 컬럼 코멘트 입력
COMMENT ON TABLE TBL_CLASSROOM IS '강의실';
COMMENT ON COLUMN TBL_CLASSROOM.ROOM_ID IS '강의실코드';
COMMENT ON COLUMN TBL_CLASSROOM.ROOM_NAME IS '강의실명';
COMMENT ON COLUMN TBL_CLASSROOM.ROOM_INWON IS '강의실 수용 인원';

-- TBL_OCOURSE (개설과정) 테이블, 컬럼 코멘트 입력
COMMENT ON TABLE TBL_OCOURSE IS '개설과정';
COMMENT ON COLUMN TBL_OCOURSE.OCOURSE_ID IS '개설과정코드';
COMMENT ON COLUMN TBL_OCOURSE.START_DATE IS '과정 시작일';
COMMENT ON COLUMN TBL_OCOURSE.END_DATE IS '과정 종료일';
COMMENT ON COLUMN TBL_OCOURSE.INSERT_DATE IS '개설일자';            -- 개설일자 기본값 SYSDATE
COMMENT ON COLUMN TBL_OCOURSE.COURSE_ID IS '과정.과정코드 참조키';
COMMENT ON COLUMN TBL_OCOURSE.ROOM_ID IS '강의실.강의실코드 참조키';

--TBL_TEXTBOOK
COMMENT ON COLUMN TBL_TEXTBOOK.BOOK_ID IS 'PRIMARY KEY COLUMN OF TBL_TEXTBOOK TABLE.';
COMMENT ON COLUMN TBL_TEXTBOOK.BOOK_NAME IS 'A NOT NULL COLUMN THAT SHOWS NAME OF A BOOK.';
COMMENT ON COLUMN TBL_TEXTBOOK.BOOK_PUB IS 'THIS COLUMN SHOWS THE NAME OF THE PUBLISHER OF THE BOOK.';
COMMENT ON TABLE TBL_TEXTBOOK IS 'TBL_TEXTBOOK TABLE THAT SHOWS DETAILS OF BOOK INFORMATION.';

--TBL_OCLASS
COMMENT ON COLUMN TBL_OCLASS.OCLASS_ID IS 'PRIMARY KEY COLUMN OF TBL_OCLASS TABLE.';
COMMENT ON COLUMN TBL_OCLASS.START_DATE IS 'A NOT NULL COLUMN THAT SHOWS START DATE OF THE OPENED CLASSES.';
COMMENT ON COLUMN TBL_OCLASS.END_DATE IS 'A NOT NULL COLUMN THAT SHOWS END DATE OF THE OPENED CLASSES.';
COMMENT ON COLUMN TBL_OCLASS.INSERT_DATE IS '';
COMMENT ON COLUMN TBL_OCLASS.ABLE_ID IS 'THIS COLUMN IS A UNIQUE IDENTIFIER NUMBER OF TBL_ABLE TABLE. 
FOREIGN KEY TO ABLE_ID COLUMN OF TBL_ABLE TABLE.';
COMMENT ON COLUMN TBL_OCLASS.OCOURSE_ID IS 'THIS COLUMN IS A UNIQUE IDENTIFIER NUMBER OF TBL_OCOURSE TABLE. 
FOREIGN KEY TO OCOURSE_ID COLUMN OF TBL_OCOURSE TABLE.';
COMMENT ON COLUMN TBL_OCLASS.BOOK_ID IS 'THIS COLUMN IS A UNIQUE IDENTIFIER NUMBER OF TBL_TEXTBOOK TABLE. 
FOREIGN KEY TO BOOK_ID COLUMN OF TBL_TEXTBOOK TABLE.';
COMMENT ON TABLE TBL_OCLASS IS 'TBL_OCLASS TABLE THAT SHOWS DETAILS OF OPENED CLASSES. 
REFERENCES WITH TBL_ABLE, TBL_OCOURSE, TBL_TEXTBOOK TABLE.';

--TBL_STUDENT 
COMMENT ON TABLE TBL_STUDENT IS '학생테이블';
COMMENT ON COLUMN TBL_STUDENT.STU_ID IS '학생 아이디';
COMMENT ON COLUMN TBL_STUDENT.STU_NAME IS '학생 이름';
COMMENT ON COLUMN TBL_STUDENT.STU_PW IS '학생 비밀번호';
COMMENT ON COLUMN TBL_STUDENT.STU_SSN IS '주민등록번호';
COMMENT ON COLUMN TBL_STUDENT.STU_EMAIL IS '학생 이메일';
COMMENT ON COLUMN TBL_STUDENT.STU_PHONE IS '학생 전화번호';
COMMENT ON COLUMN TBL_STUDENT.STU_DATE IS '학생 가입날짜';

--TBL_REASON
COMMENT ON TABLE TBL_REASON IS '탈락 사유 테이블';
COMMENT ON COLUMN TBL_REASON.REASONS_ID IS '탈락 사유 코드';
COMMENT ON COLUMN TBL_REASON.REASONS_MEMO IS '탈락 사유';

--TBL_SIGN
COMMENT ON TABLE TBL_SIGN IS '수강신청 테이블';
COMMENT ON COLUMN TBL_SIGN.SIGN_ID IS '수강신청 코드';
COMMENT ON COLUMN TBL_SIGN.SIGN_DATE IS '수강신청 날짜';
COMMENT ON COLUMN TBL_SIGN.STU_ID IS '학생 아이디';
COMMENT ON COLUMN TBL_SIGN.OCOURSE_ID IS '개설과정 코드';

--TBL_FAIL
COMMENT ON TABLE TBL_FAIL IS '중도 탈락 테이블';
COMMENT ON COLUMN TBL_FAIL.FAIL_ID IS '중도 탈락 코드';
COMMENT ON COLUMN TBL_FAIL.FAIL_DATE IS '탈락 일자';
COMMENT ON COLUMN TBL_FAIL.SIGN_ID IS '수강신청 코드';
COMMENT ON COLUMN TBL_FAIL.REASONS_ID IS '탈락 사유 코드';

--TBL_POINT
COMMENT ON COLUMN TBL_POINT.POINT_ID IS 'PRIMARY KEY COLUMN OF TBL_POINT TABLE.';
COMMENT ON COLUMN TBL_POINT.POINT_ATTEND IS 'A NOT NULL COLUMN THAT SHOWS END DATE OF THE OPENED CLASSES.'; 
COMMENT ON COLUMN TBL_POINT.POINT_PRACTICE IS 'A NOT NULL COLUMN THAT SHOWS END DATE OF THE OPENED CLASSES.'; 
COMMENT ON COLUMN TBL_POINT.POINT_WRITE IS 'A NOT NULL COLUMN THAT SHOWS END DATE OF THE OPENED CLASSES.'; 
COMMENT ON COLUMN TBL_POINT.OCLASS_ID IS 'THIS COLUMN IS A UNIQUE IDENTIFIER NUMBER OF TBL_OCLASS TABLE. 
FOREIGN KEY TO BOOK_ID COLUMN OF TBL_OCLASS TABLE.';
COMMENT ON TABLE TBL_POINT IS 'TBL_POINT TABLE THAT SHOWS DETAILS OF POINTS FOR ATTENDANCE, PRACTICAL SKILLS, AND WRITING.
REFERENCES WITH TBL_OCOURSE TABLE.';

--TBL_GRADE 
COMMENT ON TABLE TBL_GRADE IS '성적 테이블';
COMMENT ON COLUMN TBL_GRADE.GRADE_ID IS '성적코드';
COMMENT ON COLUMN TBL_GRADE.GRADE_ATTEND IS '출결';
COMMENT ON COLUMN TBL_GRADE.GRADE_PRACTICE IS '실기';
COMMENT ON COLUMN TBL_GRADE.GRADE_WRITE IS '필기';
COMMENT ON COLUMN TBL_GRADE.OCLASS_ID IS '개설과목 코드';
COMMENT ON COLUMN TBL_GRADE.SIGN_ID IS '수강신청 코드';